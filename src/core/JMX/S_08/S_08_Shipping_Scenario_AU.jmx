<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert query" enabled="true">
          <stringProp name="dataSource">omsroot</stringProp>
          <stringProp name="query">INSERT INTO core.t_order(
            order_no, integrated_order_no, basket_no, split_type, split_no, 
            order_status, order_sub_status, billing_country_code, billing_title, 
            billing_first_name, billing_last_name, billing_kana_first_name, 
            billing_kana_last_name, billing_address_state, billing_address_city, 
            billing_address_1, billing_address_2, billing_postal_code, billing_phone_number, 
            billing_mobile_no, billing_email_address, billing_corporate_name, 
            billing_department_name, language_code, customer_no, customer_type, 
            order_comment, channel_type, channel_code, real_device_code, 
            order_updated_screen_type, action_code, store_code, receipt_discount_flag, 
            receipt_discount_amount, employee_discount_flag, currency_code, 
            total_amount_tax_excluded, total_amount_tax_included, total_tax_amount, 
            service_discount, order_created_datetime, order_confirmed_datetime, 
            order_canceled_datetime, total_amount_tax_excluded_current, total_amount_tax_included_current, 
            total_tax_amount_current, service_discount_current, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by,region_code)
    VALUES (&apos;OCR0100301019&apos;, &apos;mainOrder100&apos;, &apos;78290547DDD64CF28FE47DD241DA3108&apos;, &apos;NON_SPLIT&apos;, 1, 
            &apos;SHIPMENT_ORDER_WAIT&apos;, &apos;SHIPMENT_ORDER_WAIT&apos;, &apos;CA&apos;, &apos;CA&apos;, 
            &apos;TestF&apos;, &apos;TestL&apos;, &apos;TestKF&apos;, 
            &apos;TestKL&apos;, &apos;STATE&apos;, &apos;CITY&apos;, 
            &apos;ADDRESS1&apos;, &apos;ADDRESS2&apos;, &apos;670102&apos;, &apos;7736209003&apos;, 
            &apos;7736209003&apos;, &apos;abc@gmail.com&apos;, &apos;Companyname&apos;, 
            &apos;testing&apos;, &apos;EN&apos;, &apos;S17-xu-08112244&apos;, &apos;CUSTTYPE&apos;, 
            &apos;COMMENT&apos;, &apos;ChannelType&apos;, &apos;EC&apos;, &apos;PC&apos;, 
            &apos;SCType&apos;, &apos;AC&apos;, &apos;SC&apos;, &apos;Y&apos;, 
            1000.25, &apos;N&apos;, &apos;CAD&apos;, 
            100.25, 200.25, 100.25, 
            50.25, now(), null, 
            null, 100.25, 100.25,100.25,100.25,
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUSTOMER&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUSTOMER&apos;,&apos;ca&apos;
          );

INSERT INTO core.t_provisional_order(
            order_no, integrated_order_no, language_code, customer_no, basket_no, 
            split_type, split_no, order_status, order_created_datetime, order_canceled_datetime, 
            payment_type, payment_amount_tax_included, payment_amount_tax_exclude, 
            paid_flag, payment_store_code, store_payment_barcode_no, coupon_id, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by,region_code)
    VALUES (&apos;OCR0100301019&apos;, &apos;mainOrder100&apos;, &apos;EN&apos;, &apos;S17-xu-08112244&apos;, &apos;78290547DDD64CF28FE47DD241DA3108&apos;, 
            &apos;NON_SPLIT&apos;, 1, 
            &apos;ORDER_ACCEPTANCE&apos;, now(), null, 
            &apos;UNIQLO_STORE_PAYMENT&apos;, 100.25, 100.25, 
            &apos;Y&apos;, &apos;112326&apos;, &apos;5079822000500&apos;, &apos;CPN100&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;,&apos;ca&apos;);

INSERT INTO core.t_order_payment(
            order_no, payment_series_no, payment_uid, payment_id, payment_type, 
            payment_amount, payment_amount_tax_included, paid_flag, payment_store_code, 
            store_payment_barcode_no, registration_datetime, registrant_by, 
            updated_datetime, last_updated_by, store_payment_expiry_date,region_code)
    VALUES (&apos;OCR0100301019&apos;, 1000, null, null, &apos;UNIQLO_STORE_PAYMENT&apos;, 
            null, null, false, &apos;112326&apos;, 
            &apos;5079822000500&apos;, &apos;2019-12-30&apos;, &apos;CUSTOMER1&apos;, 
            &apos;2019-12-30&apos;, &apos;CUSTOMER1&apos;, null,&apos;ca&apos;);


INSERT INTO core.t_delivery(
            order_no, shipping_instruction_seq, delivery_no, shipping_country_code, 
            shipping_first_name, shipping_last_name, shipping_kana_first_name, 
            shipping_kana_last_name, shipping_address_state, shipping_address_city, 
            shipping_address_1, shipping_address_2, shipping_postal_code, 
            shipping_phone_number, shipping_mobile_no, shipping_title, shipping_corporate_name, 
            shipping_department_name, receipt_store_code, receipt_store_company_name, 
            receipt_store_name, receipt_store_additional_information, receipt_type, 
            delivery_type, delivery_designated_date, delivery_designated_datetime, 
            shipment_location_id, delivery_company_code, display_delivery_plan_date_from, 
            display_delivery_plan_date_to, deliverable_time, order_closed_time, 
            warehouse_order_comment, delivery_company_instruction_comment, 
            gift_bag_id, gift_bag_name, ordered_gift_bag_selling_price_tax_excluded, 
            ordered_gift_bag_selling_price_tax_included, message_card_id, 
            message_card_name, ordered_message_card_selling_price_tax_excluded, 
            ordered_message_card_selling_price_tax_included, message_contents, 
            wrapping_flag, main_delivery_voucher_no, store_for_comment, honorific_title, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by, 
            display_delivery_plan_datetime_from, display_delivery_plan_datetime_to)
    VALUES (&apos;OCR0100301019&apos;, null, null, null, 
            null, null, null, 
            null, null, null, 
            null, null, null, 
            null, null, null, null, 
            null, &apos;112326&apos;, null, 
            null, null, &apos;STORE&apos;, 
            &apos;REGULAR_DELIVERY&apos;, null, null, 
            null, null, null, 
            null, null, null, 
            null, null, 
            null, null, null, 
            null, null, 
            null, null, 
            null, null, 
            &apos;Y&apos;, &apos;DVOUCH100&apos;, null, null, 
            &apos;2019-12-30&apos;, &apos;CUSTOMER1&apos;, &apos;2019-12-30&apos;, &apos;CUSTOMER1&apos;, 
            null, null);


INSERT INTO core.t_order_detail(
            order_no, order_detail_no, business_date, processed_time, brand_code, 
            l1_item_code, item_name, color_name, size_name, pattern_length_name, 
            color_code, size_code, pattern_length_code, stock_in_transit_history_type, 
            first_order_item_flag, alteration_fee_chargeable_flag, customize_company_code, 
            shipment_instructed_quantity, shipment_confirmed_quantity, returning_item_quantity, 
            l2_item_code, display_l2_item_code, l3_item_code, epc_code, communication_code, 
            store_code, g_department_code, major_category_code, item_quantity, 
            first_selling_price, normal_price, single_item_limit_promotion_no, 
            single_item_limit_price, customer_single_item_limited_promotion_no, 
            customer_single_item_limited_price, bclass_item_price, new_price, 
            limited_quantity_number_of_people, non_calculation_type, bundle_purchase_applied_quantity, 
            bundle_purchase_applied_price, customer_bundle_purchase_applied_quantity, 
            customer_bundle_purchase_applied_price, store_single_item_discount_type, 
            store_single_item_discount_amount_rate, set_store_sales_flag, 
            set_store_sales_price, set_store_sales_detail_index, bundle_purchase_applied_index, 
            applied_detail_retail_price_type, applied_detail_retail_unit_price_tax_excluded, 
            applied_detail_retail_unit_price_tax_included, applied_detail_retail_price_tax_excluded, 
            applied_detail_retail_price_tax_included, taxation_type, tax_system_type, 
            payment_discount_amount, non_item_link_number, details_deleted_flag, 
            detail_processed_flag, first_selling_price_current, single_item_limit_price_current, 
            customer_single_item_limited_price_current, bclass_item_price_current, 
            new_price_current, limited_quantity_number_of_people_current, 
            bundle_purchase_applied_quantity_current, bundle_purchase_applied_price_current, 
            customer_bundle_purchase_applied_quantity_current, customer_bundle_purchase_applied_price_current, 
            store_single_item_discount_type_current, store_single_item_discount_amount_rate_current, 
            set_store_sales_flag_current, set_store_sales_price_current, 
            set_store_sales_detail_index_current, bundle_purchase_applied_index_current, 
            applied_detail_retail_unit_price_tax_excluded_current, applied_detail_retail_unit_price_tax_included_current, 
            applied_detail_retail_price_tax_excluded_current, applied_detail_retail_price_tax_included_current, 
            taxation_type_current, tax_system_type_current, payment_discount_amount_current, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by, 
            item_actual_sales_unit_price_tax_excluded, item_actual_sales_unit_price_tax_included)
    VALUES (&apos;OCR0100301019&apos;, &apos;1&apos;, &apos;01-01-2020&apos;, &apos;11:02&apos;, null, 
            null, null, null, null, null, 
            null, null, null, null, 
            true, true, null, 
            null, null, null, 
            null, null, null, null, null, 
            null, null, null, 1, 
            null, null, null, 
            null, null, 
            null, null, null, 
            null, null, null, 
            null, null, 
            null, null, 
            null, true, 
            null, null, null, 
            null, null, 
            null, null, 
            null, null, null, 
            null, null, true, 
            true, null, null, 
            null, null, 
            null, null, 
            null, null, 
            null, null, 
            null, null, 
            true, null, 
            null, null, 
            null, null, 
            null, null, 
            null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            null, null);


INSERT INTO core.t_inventory_booking(
            order_no, order_detail_no, l3_item_code, booking_id, booking_quantity, 
            shipment_order_quantity, shipment_confirmed_quantity, shipment_cancel_quantity, 
            planned_returning_item_quantity, returning_item_quantity, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301019&apos;, &apos;1&apos;, &apos;2000084856379&apos;, null, null, 
            null, null, null, 
            null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);
           
INSERT INTO core.t_inventory_booking_detail (
           order_no, order_detail_no, l3_item_code, booking_location_type, 
           booking_location_id, inventory_type, booking_quantity, transfer_management_no, 
           registration_datetime, registrant_by, updated_datetime, last_updated_by)
    values (&apos;OCR0100301019&apos;, 1, &apos;2000084856379&apos;, &apos;EC_STOCK&apos;, 
    		&apos;B00001&apos;, &apos;CONFIRMED_STOCK&apos;, 1, &apos;te&apos;, 
    		&apos;2016-07-01 05:37:18.720&apos;, &apos;S17-xu-08112244&apos;, &apos;2003-11-26 18:32:07.645&apos;, &apos;S17-xu-08112244&apos;);

INSERT INTO core.t_payment_discount(
            order_no, transaction_id, payment_discount_series_no, denomination_group_code, 
            coupon_id, corporate_id, denomination_id, payment_discount_type, 
            payment_discount_amount_rate, payment_discount_target_type, applied_discount_amount, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301019&apos;, &apos;TSCTN001&apos;, &apos;1001&apos;, &apos;DGC1001&apos;, 
            null, null, &apos;DENM1001&apos;, null, 
            1000, &apos;Normal&apos;, 250, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_delivery_pieces(
            order_no, delivery_voucher_no, registration_datetime, registrant_by, 
            updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301019&apos;, &apos;DVOUCH100&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_receipt_management(
            order_no, delivery_no, receipt_store_code, receipt_store_company_name, 
            receipt_store_name, receive_intensive_status, receive_expire_intensive_datetime, 
            store_memo, pieces_quantity, receipt_store_additional_information_1, 
            receipt_store_additional_information_2, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301019&apos;, null, &apos;112326&apos;, null, 
            null, &apos;ARRIVE_WAIT&apos;, null, 
            null, null, null, 
            null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);

INSERT INTO core.t_receipt_management_detail(
            order_no, delivery_no, delivery_voucher_no, store_receipt_no, 
            receipt_authentication_key, receipt_plan_datetime, receivable_start_datetime, 
            receipt_expire_datetime, store_arrive_datetime, received_complete_datetime, 
            store_pickup_datetime, store_return_datetime, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301019&apos;, null, &apos;DVOUCH100&apos;, &apos;00000161&apos;, 
            null, null, null, 
            null, null, null, 
            null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_receipt_management_detail_status(
            order_no, delivery_no, delivery_voucher_no, receive_management_detail_series_no, 
            store_receive_status, store_receive_status_updated_datetime, 
            store_receive_status_last_updated_by, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301019&apos;, null, &apos;DVOUCH100&apos;, 1001, 
            null, null, 
            null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_authorization_cancel_recovery(
            order_no, recovery_key, processed_type, recovery_processing_count, 
            payment_id, registration_datetime, registrant_by, updated_datetime, 
            last_updated_by)
    VALUES (&apos;OCR0100301019&apos;, &apos;RK100&apos;, &apos;Normal&apos;, 2, 
            &apos;PMNT100&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_order_control(
            order_no, control_category, control_type, control_value, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301019&apos;, &apos;Control&apos;, &apos;Normal&apos;, &apos;Value&apos;,&apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_order_detail_non_item_detail(
            order_no, detail_no, transaction_id, non_item_detail_no, business_date, 
            brand_code, non_item_code, service_code, non_item_detail_quantity, 
            new_price, non_calculation_type, applied_detail_retail_unit_price_tax_excluded, 
            applied_detail_retail_unit_price_tax_included, applied_detail_retail_price_tax_excluded, 
            applied_detail_retail_price_tax_included, taxation_type, tax_system_type, 
            non_item_discount_amount, registration_datetime, registrant_by, 
            updated_datetime, last_updated_by, non_item_actual_sales_unit_price_tax_excluded, 
            non_item_actual_sales_unit_price_tax_included)
    VALUES (&apos;OCR0100301019&apos;, 1001, &apos;TSCTN001&apos;, 1002, null, 
            null, null, null, null, 
            null, null, null, 
            null, null, 
            null, null, null, 
            null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, null, 
            null);


INSERT INTO core.t_order_detail_non_item_detail_discount(
            order_no, detail_no, transaction_id, non_item_detail_no, non_item_detail_discount_series_no, 
            promotion_type, store_discount_type, discount_quantity, detail_applied_discount_amount, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301019&apos;, 1001, &apos;TSCTN001&apos;, 1002, 1003, 
            null, null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);

INSERT INTO core.t_order_detail_non_item_detail_sales_tax(
            order_no, detail_no, transaction_id, non_item_detail_no, non_item_detail_sales_tax_series_no, 
            sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301019&apos;, 1001, &apos;TSCTN001&apos;, 1002, 1004, 
            null, null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_item_detail_discount(
            order_no, detail_no, transaction_id, item_detail_discount_series_no, 
            promotion_type, promotion_id, store_discount_type, discount_quantity, 
            detail_applied_discount_amount, registration_datetime, registrant_by, 
            updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301019&apos;, 1001, &apos;TSCTN001&apos;, 1003, 
            null, null, null, null, 
            null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);

 INSERT INTO core.t_item_detail_sales_tax(
            order_no, detail_no, transaction_id, item_detail_sales_tax_series_no, 
            sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301019&apos;, 1001, &apos;TSCTN001&apos;, 1004, 
            null, null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);

INSERT INTO core.t_item_option(
            order_no, order_detail_no, item_option_detail_no, alteration_type, 
            set_value, alteration_amount_tax_included, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301019&apos;, &apos;1&apos;, &apos;000001&apos;, null, 
            null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);
	

INSERT INTO inventory.m_item_catalog (
                l1_item_code,l2_item_code,l3_item_code,locale_code,ec_product_name
                ,color_code,display_color_code,color_name,size_code,display_size_code
                ,size_name,pattern_length_code,display_pattern_length_code,pattern_length_name
                ,display_l2_item_code,registration_datetime,updated_datetime,registrant_by
                ,last_updated_by) 
   VALUES(&apos;172731&apos;,&apos;03600182&apos;,&apos;2000084856379&apos;,&apos;en_CA&apos;,&apos;Stretch selvedge skinny fit tapered jeans&apos;
                ,&apos;COL69&apos;,&apos;69&apos;,&apos;NAVY&apos;,&apos;INS028&apos;,&apos;028&apos;,&apos;28inch&apos;,&apos;INL034&apos;,&apos;034&apos;,&apos;34inch&apos;
                ,&apos;17273169028034&apos;,&apos;2018/04/23 15:24:40.407&apos;,&apos;2018/04/23 15:24:40.407&apos;,&apos;Itb&apos;,&apos;Itb&apos;);

INSERT INTO inventory.t_l3_stock_status_quantity(
            stock_status_id, stock_id, stock_status, quantity, block_flag, 
            registration_datetime, updated_datetime, registrant_by, last_updated_by)
    VALUES (100, 1, &apos;ORDER_BOOKED&apos;, 1, false, 
            &apos;2018/04/23 15:24:40.407&apos;,&apos;2018/04/23 15:24:40.407&apos;,&apos;Itb&apos;,&apos;Itb&apos;);
            
INSERT INTO inventory.t_l3_stock_quantity(
            stock_id, location_type, location_id, l3_item_code, stock_type, 
            stock_total_quantity, registration_datetime, updated_datetime, 
            registrant_by, last_updated_by)
    VALUES (1, &apos;EC_STOCK&apos;, &apos;B00001&apos;, &apos;2000084856379&apos;, &apos;CONFIRMED_STOCK&apos;, 
            1, &apos;2018/04/23 15:24:40.407&apos;,&apos;2018/04/23 15:24:40.407&apos;,&apos;Itb&apos;,&apos;Itb&apos;);

INSERT INTO inventory.m_plu_mapping(
            plu_mapping_id, l3_item_code, l2_item_code, display_l2_item_code, 
            l1_item_code, registration_datetime, updated_datetime, registrant_by, 
            last_updated_by)
    VALUES (100, &apos;2000084856379&apos;, &apos;03600182&apos;, &apos;17273169028034&apos;, 
            &apos;172731&apos;, &apos;2018/04/23 15:24:40.407&apos;,&apos;2018/04/23 15:24:40.407&apos;,&apos;Itb&apos;,&apos;Itb&apos;);

INSERT INTO core.t_shipment_control(
            order_no, delivery_no, shipping_instruction_seq, shipment_status, 
            shipment_sub_status, shipment_target_extraction_processing_datetime, 
            shipment_confirmed_processing_datetime, delivery_complete_processing_datetime, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by, region_code)
    VALUES (&apos;OCR0100301019&apos;, &apos;delivery_no01&apos;, 1111, null, 
            null, null, 
            &apos;2020-01-16 04:05:06+02&apos;, &apos;2020-01-16 04:05:06+02&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUSTOMER&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUSTOMER&apos;, &apos;ca&apos;);

INSERT INTO core.t_non_item_detail(
	order_no, transaction_id, non_item_detail_no, business_date, brand_code, non_item_code, service_code, non_item_detail_quantity, new_price, non_calculation_type, free_type, applied_detail_retail_unit_price_tax_excluded, applied_detail_retail_unit_price_tax_included, applied_detail_retail_price_tax_excluded, applied_detail_retail_price_tax_included, free_judge_amount, taxation_type, tax_system_type, non_item_discount_amount, shipping_agency_address, shipping_address, details_deleted_flag, detail_processed_flag, registration_datetime, registrant_by, updated_datetime, last_updated_by, non_item_actual_sales_unit_price_tax_excluded, non_item_actual_sales_unit_price_tax_included)
	VALUES (&apos;OCR0100301019&apos;, &apos;TSCTN001&apos;, 1002, &apos;20200228&apos;, &apos;uq&apos;, null, null, 2, 100, &apos;BM&apos;, null, 100, 100, 100, 100, 100, &apos;GST&apos;, &apos;GST&apos;, 100, null, null, true, true,&apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, null, null);

INSERT INTO core.t_non_item_detail_discount(
            order_no, transaction_id, non_item_detail_no, non_item_detail_discount_series_no, 
            promotion_type, store_discount_type, discount_quantity, detail_applied_discount_amount, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301019&apos;, &apos;TSCTN001&apos;, 1002, 1003, 
           null, null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;,&apos;CUST101&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);


INSERT INTO core.t_non_item_detail_option(
	order_no, transaction_id, non_item_detail_no, non_item_detail_option_series_no, non_item_code, service_code, non_item_detail_quantity, new_price, applied_detail_retail_unit_price_tax_excluded, applied_detail_retail_unit_price_tax_included, applied_detail_retail_price_tax_excluded, applied_detail_retail_price_tax_included, taxation_type, tax_system_type, non_item_discount_amount, registration_datetime, registrant_by, updated_datetime, last_updated_by, non_item_actual_sales_unit_price_tax_excluded, non_item_actual_sales_unit_price_tax_included)
	VALUES (&apos;OCR0100301019&apos;, &apos;TSCTN001&apos;, 1002, 1002, null, null, 5, 100, 100, 100, 100, 100, &apos;GST&apos;, &apos;GST&apos;, 100, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, null, null);


INSERT INTO core.t_non_item_detail_sales_tax(
	order_no, transaction_id, non_item_detail_no, non_item_detail_sales_tax_series_no, sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, registration_datetime, registrant_by, updated_datetime, last_updated_by)
	VALUES (&apos;OCR0100301019&apos;,&apos;TSCTN001&apos;, 1002, 1004, 
            null, null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);

            
INSERT INTO core.t_non_item_total(
	order_no, transaction_id, non_item_total_series_no, non_item_code, total_amount_tax_excluded, total_amount_tax_included, registration_datetime, registrant_by, updated_datetime, last_updated_by)
	VALUES (&apos;OCR0100301019&apos;, &apos;TSCTN001&apos;, 1002, null, null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);

INSERT INTO core.t_non_item_total_sales_tax(
	order_no, transaction_id, non_item_total_series_no, non_item_total_sales_tax_series_no, sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, registration_datetime, registrant_by, updated_datetime, last_updated_by)
	VALUES (&apos;OCR0100301019&apos;, &apos;TSCTN001&apos;, 1002, 1011, null, null, null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);

INSERT INTO core.t_non_item_detail_option_sales_tax(
	order_no, transaction_id, non_item_detail_no, non_item_detail_option_series_no, non_item_detail_option_sales_tax_series_no, sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, registration_datetime, registrant_by, updated_datetime, last_updated_by)
	VALUES (&apos;OCR0100301019&apos;, &apos;TSCTN001&apos;, 1002, 1002, 1002, null, null, null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);

            
INSERT INTO core.t_sales_tax(
	order_no, transaction_id, sales_tax_series_no, sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, registration_datetime, registrant_by, updated_datetime, last_updated_by)
	VALUES (&apos;OCR0100301019&apos;, &apos;TSCTN001&apos;, 1002, null, null, null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;,    &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);





INSERT INTO core.t_order(
            order_no, integrated_order_no, basket_no, split_type, split_no, 
            order_status, order_sub_status, billing_country_code, billing_title, 
            billing_first_name, billing_last_name, billing_kana_first_name, 
            billing_kana_last_name, billing_address_state, billing_address_city, 
            billing_address_1, billing_address_2, billing_postal_code, billing_phone_number, 
            billing_mobile_no, billing_email_address, billing_corporate_name, 
            billing_department_name, language_code, customer_no, customer_type, 
            order_comment, channel_type, channel_code, real_device_code, 
            order_updated_screen_type, action_code, store_code, receipt_discount_flag, 
            receipt_discount_amount, employee_discount_flag, currency_code, 
            total_amount_tax_excluded, total_amount_tax_included, total_tax_amount, 
            service_discount, order_created_datetime, order_confirmed_datetime, 
            order_canceled_datetime, total_amount_tax_excluded_current, total_amount_tax_included_current, 
            total_tax_amount_current, service_discount_current, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by,region_code)
    VALUES (&apos;OCR0100301020&apos;, &apos;mainOrder101&apos;, &apos;78290547DDD64CF28FE47DD241DA3109&apos;, &apos;NON_SPLIT&apos;, 1, 
            &apos;SHIPMENT_ORDER_WAIT&apos;, &apos;SHIPMENT_ORDER_WAIT&apos;, &apos;AU&apos;, &apos;AU&apos;, 
            &apos;TestF&apos;, &apos;TestL&apos;, &apos;TestKF&apos;, 
            &apos;TestKL&apos;, &apos;STATE&apos;, &apos;CITY&apos;, 
            &apos;ADDRESS1&apos;, &apos;ADDRESS2&apos;, &apos;670102&apos;, &apos;7736209003&apos;, 
            &apos;7736209003&apos;, &apos;abc@gmail.com&apos;, &apos;Companyname&apos;, 
            &apos;testing&apos;, &apos;EN&apos;, &apos;S17-xu-08112244&apos;, &apos;CUSTTYPE&apos;, 
            &apos;COMMENT&apos;, &apos;ChannelType&apos;, &apos;EC&apos;, &apos;PC&apos;, 
            &apos;SCType&apos;, &apos;AC&apos;, &apos;SC&apos;, &apos;Y&apos;, 
            1000.25, &apos;N&apos;, &apos;AUD&apos;, 
            100.25, 200.25, 100.25, 
            50.25, now(), null, 
            null, 100.25, 100.25,100.25,100.25,
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUSTOMER&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUSTOMER&apos;,&apos;au&apos;
          );

INSERT INTO core.t_provisional_order(
            order_no, integrated_order_no, language_code, customer_no, basket_no, 
            split_type, split_no, order_status, order_created_datetime, order_canceled_datetime, 
            payment_type, payment_amount_tax_included, payment_amount_tax_exclude, 
            paid_flag, payment_store_code, store_payment_barcode_no, coupon_id, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by,region_code)
    VALUES (&apos;OCR0100301020&apos;, &apos;mainOrder101&apos;, &apos;EN&apos;, &apos;S17-xu-08112244&apos;, &apos;78290547DDD64CF28FE47DD241DA3109&apos;, 
            &apos;NON_SPLIT&apos;, 1, 
            &apos;ORDER_ACCEPTANCE&apos;, now(), null, 
            &apos;UNIQLO_STORE_PAYMENT&apos;, 100.25, 100.25, 
            &apos;Y&apos;, &apos;112327&apos;, &apos;5079822000500&apos;, &apos;CPN101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;,&apos;au&apos;);

INSERT INTO core.t_order_payment(
            order_no, payment_series_no, payment_uid, payment_id, payment_type, 
            payment_amount, payment_amount_tax_included, paid_flag, payment_store_code, 
            store_payment_barcode_no, registration_datetime, registrant_by, 
            updated_datetime, last_updated_by, store_payment_expiry_date,region_code)
    VALUES (&apos;OCR0100301020&apos;, 1001, null, null, &apos;UNIQLO_STORE_PAYMENT&apos;, 
            null, null, false, &apos;112327&apos;, 
            &apos;5079822000501&apos;, &apos;2019-12-30&apos;, &apos;CUSTOMER1&apos;, 
            &apos;2019-12-30&apos;, &apos;CUSTOMER1&apos;, null,&apos;au&apos;);


INSERT INTO core.t_delivery(
            order_no, shipping_instruction_seq, delivery_no, shipping_country_code, 
            shipping_first_name, shipping_last_name, shipping_kana_first_name, 
            shipping_kana_last_name, shipping_address_state, shipping_address_city, 
            shipping_address_1, shipping_address_2, shipping_postal_code, 
            shipping_phone_number, shipping_mobile_no, shipping_title, shipping_corporate_name, 
            shipping_department_name, receipt_store_code, receipt_store_company_name, 
            receipt_store_name, receipt_store_additional_information, receipt_type, 
            delivery_type, delivery_designated_date, delivery_designated_datetime, 
            shipment_location_id, delivery_company_code, display_delivery_plan_date_from, 
            display_delivery_plan_date_to, deliverable_time, order_closed_time, 
            warehouse_order_comment, delivery_company_instruction_comment, 
            gift_bag_id, gift_bag_name, ordered_gift_bag_selling_price_tax_excluded, 
            ordered_gift_bag_selling_price_tax_included, message_card_id, 
            message_card_name, ordered_message_card_selling_price_tax_excluded, 
            ordered_message_card_selling_price_tax_included, message_contents, 
            wrapping_flag, main_delivery_voucher_no, store_for_comment, honorific_title, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by, 
            display_delivery_plan_datetime_from, display_delivery_plan_datetime_to)
    VALUES (&apos;OCR0100301020&apos;, null, null, null, 
            null, null, null, 
            null, null, null, 
            null, null, null, 
            null, null, null, null, 
            null, &apos;112327&apos;, null, 
            null, null, &apos;STORE&apos;, 
            &apos;REGULAR_DELIVERY&apos;, null, null, 
            null, null, null, 
            null, null, null, 
            null, null, 
            null, null, null, 
            null, null, 
            null, null, 
            null, null, 
            &apos;Y&apos;, &apos;DVOUCH101&apos;, null, null, 
            &apos;2019-12-30&apos;, &apos;CUSTOMER1&apos;, &apos;2019-12-30&apos;, &apos;CUSTOMER1&apos;, 
            null, null);


INSERT INTO core.t_order_detail(
            order_no, order_detail_no, business_date, processed_time, brand_code, 
            l1_item_code, item_name, color_name, size_name, pattern_length_name, 
            color_code, size_code, pattern_length_code, stock_in_transit_history_type, 
            first_order_item_flag, alteration_fee_chargeable_flag, customize_company_code, 
            shipment_instructed_quantity, shipment_confirmed_quantity, returning_item_quantity, 
            l2_item_code, display_l2_item_code, l3_item_code, epc_code, communication_code, 
            store_code, g_department_code, major_category_code, item_quantity, 
            first_selling_price, normal_price, single_item_limit_promotion_no, 
            single_item_limit_price, customer_single_item_limited_promotion_no, 
            customer_single_item_limited_price, bclass_item_price, new_price, 
            limited_quantity_number_of_people, non_calculation_type, bundle_purchase_applied_quantity, 
            bundle_purchase_applied_price, customer_bundle_purchase_applied_quantity, 
            customer_bundle_purchase_applied_price, store_single_item_discount_type, 
            store_single_item_discount_amount_rate, set_store_sales_flag, 
            set_store_sales_price, set_store_sales_detail_index, bundle_purchase_applied_index, 
            applied_detail_retail_price_type, applied_detail_retail_unit_price_tax_excluded, 
            applied_detail_retail_unit_price_tax_included, applied_detail_retail_price_tax_excluded, 
            applied_detail_retail_price_tax_included, taxation_type, tax_system_type, 
            payment_discount_amount, non_item_link_number, details_deleted_flag, 
            detail_processed_flag, first_selling_price_current, single_item_limit_price_current, 
            customer_single_item_limited_price_current, bclass_item_price_current, 
            new_price_current, limited_quantity_number_of_people_current, 
            bundle_purchase_applied_quantity_current, bundle_purchase_applied_price_current, 
            customer_bundle_purchase_applied_quantity_current, customer_bundle_purchase_applied_price_current, 
            store_single_item_discount_type_current, store_single_item_discount_amount_rate_current, 
            set_store_sales_flag_current, set_store_sales_price_current, 
            set_store_sales_detail_index_current, bundle_purchase_applied_index_current, 
            applied_detail_retail_unit_price_tax_excluded_current, applied_detail_retail_unit_price_tax_included_current, 
            applied_detail_retail_price_tax_excluded_current, applied_detail_retail_price_tax_included_current, 
            taxation_type_current, tax_system_type_current, payment_discount_amount_current, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by, 
            item_actual_sales_unit_price_tax_excluded, item_actual_sales_unit_price_tax_included)
    VALUES (&apos;OCR0100301020&apos;, &apos;2&apos;, &apos;01-01-2020&apos;, &apos;11:02&apos;, null, 
            null, null, null, null, null, 
            null, null, null, null, 
            true, true, null, 
            null, null, null, 
            null, null, null, null, null, 
            null, null, null, 1, 
            null, null, null, 
            null, null, 
            null, null, null, 
            null, null, null, 
            null, null, 
            null, null, 
            null, true, 
            null, null, null, 
            null, null, 
            null, null, 
            null, null, null, 
            null, null, true, 
            true, null, null, 
            null, null, 
            null, null, 
            null, null, 
            null, null, 
            null, null, 
            true, null, 
            null, null, 
            null, null, 
            null, null, 
            null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            null, null);


INSERT INTO core.t_inventory_booking(
            order_no, order_detail_no, l3_item_code, booking_id, booking_quantity, 
            shipment_order_quantity, shipment_confirmed_quantity, shipment_cancel_quantity, 
            planned_returning_item_quantity, returning_item_quantity, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301020&apos;, &apos;2&apos;, &apos;2000084856370&apos;, null, null, 
            null, null, null, 
            null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);
           
INSERT INTO core.t_inventory_booking_detail (
           order_no, order_detail_no, l3_item_code, booking_location_type, 
           booking_location_id, inventory_type, booking_quantity, transfer_management_no, 
           registration_datetime, registrant_by, updated_datetime, last_updated_by)
    values (&apos;OCR0100301020&apos;, 2, &apos;2000084856370&apos;, &apos;EC_STOCK&apos;, 
    		&apos;B00002&apos;, &apos;CONFIRMED_STOCK&apos;, 1, &apos;te&apos;, 
    		&apos;2016-07-01 05:37:18.720&apos;, &apos;S17-xu-08112244&apos;, &apos;2003-11-26 18:32:07.645&apos;, &apos;S17-xu-08112244&apos;);

INSERT INTO core.t_payment_discount(
            order_no, transaction_id, payment_discount_series_no, denomination_group_code, 
            coupon_id, corporate_id, denomination_id, payment_discount_type, 
            payment_discount_amount_rate, payment_discount_target_type, applied_discount_amount, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301020&apos;, &apos;TSCTN002&apos;, &apos;1002&apos;, &apos;DGC1002&apos;, 
            null, null, &apos;DENM1002&apos;, null, 
            1000, &apos;Normal&apos;, 250, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_delivery_pieces(
            order_no, delivery_voucher_no, registration_datetime, registrant_by, 
            updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301020&apos;, &apos;DVOUCH101&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_receipt_management(
            order_no, delivery_no, receipt_store_code, receipt_store_company_name, 
            receipt_store_name, receive_intensive_status, receive_expire_intensive_datetime, 
            store_memo, pieces_quantity, receipt_store_additional_information_1, 
            receipt_store_additional_information_2, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301020&apos;, null, &apos;112327&apos;, null, 
            null, &apos;ARRIVE_WAIT&apos;, null, 
            null, null, null, 
            null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);

INSERT INTO core.t_receipt_management_detail(
            order_no, delivery_no, delivery_voucher_no, store_receipt_no, 
            receipt_authentication_key, receipt_plan_datetime, receivable_start_datetime, 
            receipt_expire_datetime, store_arrive_datetime, received_complete_datetime, 
            store_pickup_datetime, store_return_datetime, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301020&apos;, null, &apos;DVOUCH101&apos;, &apos;00000162&apos;, 
            null, null, null, 
            null, null, null, 
            null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_receipt_management_detail_status(
            order_no, delivery_no, delivery_voucher_no, receive_management_detail_series_no, 
            store_receive_status, store_receive_status_updated_datetime, 
            store_receive_status_last_updated_by, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301020&apos;, null, &apos;DVOUCH101&apos;, 1002, 
            null, null, 
            null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_authorization_cancel_recovery(
            order_no, recovery_key, processed_type, recovery_processing_count, 
            payment_id, registration_datetime, registrant_by, updated_datetime, 
            last_updated_by)
    VALUES (&apos;OCR0100301020&apos;, &apos;RK101&apos;, &apos;Normal&apos;, 2, 
            &apos;PMNT101&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_order_control(
            order_no, control_category, control_type, control_value, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301020&apos;, &apos;Control&apos;, &apos;Normal&apos;, &apos;Value&apos;,&apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_order_detail_non_item_detail(
            order_no, detail_no, transaction_id, non_item_detail_no, business_date, 
            brand_code, non_item_code, service_code, non_item_detail_quantity, 
            new_price, non_calculation_type, applied_detail_retail_unit_price_tax_excluded, 
            applied_detail_retail_unit_price_tax_included, applied_detail_retail_price_tax_excluded, 
            applied_detail_retail_price_tax_included, taxation_type, tax_system_type, 
            non_item_discount_amount, registration_datetime, registrant_by, 
            updated_datetime, last_updated_by, non_item_actual_sales_unit_price_tax_excluded, 
            non_item_actual_sales_unit_price_tax_included)
    VALUES (&apos;OCR0100301020&apos;, 1002, &apos;TSCTN002&apos;, 1003, null, 
            null, null, null, null, 
            null, null, null, 
            null, null, 
            null, null, null, 
            null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, null, 
            null);


INSERT INTO core.t_order_detail_non_item_detail_discount(
            order_no, detail_no, transaction_id, non_item_detail_no, non_item_detail_discount_series_no, 
            promotion_type, store_discount_type, discount_quantity, detail_applied_discount_amount, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301020&apos;, 1002, &apos;TSCTN002&apos;, 1003, 1004, 
            null, null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);

INSERT INTO core.t_order_detail_non_item_detail_sales_tax(
            order_no, detail_no, transaction_id, non_item_detail_no, non_item_detail_sales_tax_series_no, 
            sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301020&apos;, 1002, &apos;TSCTN002&apos;, 1003, 1004, 
            null, null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_item_detail_discount(
            order_no, detail_no, transaction_id, item_detail_discount_series_no, 
            promotion_type, promotion_id, store_discount_type, discount_quantity, 
            detail_applied_discount_amount, registration_datetime, registrant_by, 
            updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301020&apos;, 1002, &apos;TSCTN002&apos;, 1004, 
            null, null, null, null, 
            null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);

 INSERT INTO core.t_item_detail_sales_tax(
            order_no, detail_no, transaction_id, item_detail_sales_tax_series_no, 
            sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301020&apos;, 1002, &apos;TSCTN002&apos;, 1005, 
            null, null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);

INSERT INTO core.t_item_option(
            order_no, order_detail_no, item_option_detail_no, alteration_type, 
            set_value, alteration_amount_tax_included, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301020&apos;, &apos;2&apos;, &apos;000002&apos;, null, 
            null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);
	

INSERT INTO inventory.m_item_catalog (
                l1_item_code,l2_item_code,l3_item_code,locale_code,ec_product_name
                ,color_code,display_color_code,color_name,size_code,display_size_code
                ,size_name,pattern_length_code,display_pattern_length_code,pattern_length_name
                ,display_l2_item_code,registration_datetime,updated_datetime,registrant_by
                ,last_updated_by) 
   VALUES(&apos;172732&apos;,&apos;03600183&apos;,&apos;2000084856370&apos;,&apos;en_AU&apos;,&apos;Stretch selvedge skinny fit tapered jeans&apos;
                ,&apos;COL69&apos;,&apos;69&apos;,&apos;NAVY&apos;,&apos;INS028&apos;,&apos;028&apos;,&apos;28inch&apos;,&apos;INL034&apos;,&apos;034&apos;,&apos;34inch&apos;
                ,&apos;17273169028034&apos;,&apos;2018/04/23 15:24:40.407&apos;,&apos;2018/04/23 15:24:40.407&apos;,&apos;Itb&apos;,&apos;Itb&apos;);

INSERT INTO inventory.t_l3_stock_status_quantity(
            stock_status_id, stock_id, stock_status, quantity, block_flag, 
            registration_datetime, updated_datetime, registrant_by, last_updated_by)
    VALUES (101, 2, &apos;ORDER_BOOKED&apos;, 1, false, 
            &apos;2018/04/23 15:24:40.407&apos;,&apos;2018/04/23 15:24:40.407&apos;,&apos;Itb&apos;,&apos;Itb&apos;);
            
INSERT INTO inventory.t_l3_stock_quantity(
            stock_id, location_type, location_id, l3_item_code, stock_type, 
            stock_total_quantity, registration_datetime, updated_datetime, 
            registrant_by, last_updated_by)
    VALUES (2, &apos;EC_STOCK&apos;, &apos;B00002&apos;, &apos;2000084856370&apos;, &apos;CONFIRMED_STOCK&apos;, 
            1, &apos;2018/04/23 15:24:40.407&apos;,&apos;2018/04/23 15:24:40.407&apos;,&apos;Itb&apos;,&apos;Itb&apos;);

INSERT INTO inventory.m_plu_mapping(
            plu_mapping_id, l3_item_code, l2_item_code, display_l2_item_code, 
            l1_item_code, registration_datetime, updated_datetime, registrant_by, 
            last_updated_by)
    VALUES (101, &apos;2000084856370&apos;, &apos;03600183&apos;, &apos;17273169028035&apos;, 
            &apos;172731&apos;, &apos;2018/04/23 15:24:40.407&apos;,&apos;2018/04/23 15:24:40.407&apos;,&apos;Itb&apos;,&apos;Itb&apos;);

INSERT INTO core.t_shipment_control(
            order_no, delivery_no, shipping_instruction_seq, shipment_status, 
            shipment_sub_status, shipment_target_extraction_processing_datetime, 
            shipment_confirmed_processing_datetime, delivery_complete_processing_datetime, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by, region_code)
    VALUES (&apos;OCR0100301020&apos;, &apos;delivery_no02&apos;, 2222, null, 
            null, null, 
            &apos;2020-01-16 04:05:06+02&apos;, &apos;2020-01-16 04:05:06+02&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUSTOMER&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUSTOMER&apos;, &apos;au&apos;);

INSERT INTO core.t_non_item_detail(
	order_no, transaction_id, non_item_detail_no, business_date, brand_code, non_item_code, service_code, non_item_detail_quantity, new_price, non_calculation_type, free_type, applied_detail_retail_unit_price_tax_excluded, applied_detail_retail_unit_price_tax_included, applied_detail_retail_price_tax_excluded, applied_detail_retail_price_tax_included, free_judge_amount, taxation_type, tax_system_type, non_item_discount_amount, shipping_agency_address, shipping_address, details_deleted_flag, detail_processed_flag, registration_datetime, registrant_by, updated_datetime, last_updated_by, non_item_actual_sales_unit_price_tax_excluded, non_item_actual_sales_unit_price_tax_included)
	VALUES (&apos;OCR0100301020&apos;, &apos;TSCTN002&apos;, 1003, &apos;20200228&apos;, &apos;uq&apos;, null, null, 2, 100, &apos;BM&apos;, null, 100, 100, 100, 100, 100, &apos;GST&apos;, &apos;GST&apos;, 100, null, null, true, true,&apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, null, null);


INSERT INTO core.t_non_item_detail_discount(
            order_no, transaction_id, non_item_detail_no, non_item_detail_discount_series_no, 
            promotion_type, store_discount_type, discount_quantity, detail_applied_discount_amount, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301020&apos;, &apos;TSCTN002&apos;, 1003, 1004, 
           null, null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;,&apos;CUST101&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);


INSERT INTO core.t_non_item_detail_option(
	order_no, transaction_id, non_item_detail_no, non_item_detail_option_series_no, non_item_code, service_code, non_item_detail_quantity, new_price, applied_detail_retail_unit_price_tax_excluded, applied_detail_retail_unit_price_tax_included, applied_detail_retail_price_tax_excluded, applied_detail_retail_price_tax_included, taxation_type, tax_system_type, non_item_discount_amount, registration_datetime, registrant_by, updated_datetime, last_updated_by, non_item_actual_sales_unit_price_tax_excluded, non_item_actual_sales_unit_price_tax_included)
	VALUES (&apos;OCR0100301020&apos;, &apos;TSCTN002&apos;, 1003, 1003, null, null, 5, 100, 100, 100, 100, 100, &apos;GST&apos;, &apos;GST&apos;, 100, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, null, null);


INSERT INTO core.t_non_item_detail_sales_tax(
	order_no, transaction_id, non_item_detail_no, non_item_detail_sales_tax_series_no, sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, registration_datetime, registrant_by, updated_datetime, last_updated_by)
	VALUES (&apos;OCR0100301020&apos;,&apos;TSCTN002&apos;, 1003, 1004, 
            null, null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);

            
INSERT INTO core.t_non_item_total(
	order_no, transaction_id, non_item_total_series_no, non_item_code, total_amount_tax_excluded, total_amount_tax_included, registration_datetime, registrant_by, updated_datetime, last_updated_by)
	VALUES (&apos;OCR0100301020&apos;, &apos;TSCTN002&apos;, 1003, null, null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);

INSERT INTO core.t_non_item_total_sales_tax(
	order_no, transaction_id, non_item_total_series_no, non_item_total_sales_tax_series_no, sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, registration_datetime, registrant_by, updated_datetime, last_updated_by)
	VALUES (&apos;OCR0100301020&apos;, &apos;TSCTN002&apos;, 1003, 1011, null, null, null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);

INSERT INTO core.t_non_item_detail_option_sales_tax(
	order_no, transaction_id, non_item_detail_no, non_item_detail_option_series_no, non_item_detail_option_sales_tax_series_no, sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, registration_datetime, registrant_by, updated_datetime, last_updated_by)
	VALUES (&apos;OCR0100301020&apos;, &apos;TSCTN002&apos;, 1003, 1003, 1003, null, null, null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);

            
INSERT INTO core.t_sales_tax(
	order_no, transaction_id, sales_tax_series_no, sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, registration_datetime, registrant_by, updated_datetime, last_updated_by)
	VALUES (&apos;OCR0100301020&apos;, &apos;TSCTN002&apos;, 1003, null, null, null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;,    &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);



INSERT INTO core.t_order(
            order_no, integrated_order_no, basket_no, split_type, split_no, 
            order_status, order_sub_status, billing_country_code, billing_title, 
            billing_first_name, billing_last_name, billing_kana_first_name, 
            billing_kana_last_name, billing_address_state, billing_address_city, 
            billing_address_1, billing_address_2, billing_postal_code, billing_phone_number, 
            billing_mobile_no, billing_email_address, billing_corporate_name, 
            billing_department_name, language_code, customer_no, customer_type, 
            order_comment, channel_type, channel_code, real_device_code, 
            order_updated_screen_type, action_code, store_code, receipt_discount_flag, 
            receipt_discount_amount, employee_discount_flag, currency_code, 
            total_amount_tax_excluded, total_amount_tax_included, total_tax_amount, 
            service_discount, order_created_datetime, order_confirmed_datetime, 
            order_canceled_datetime, total_amount_tax_excluded_current, total_amount_tax_included_current, 
            total_tax_amount_current, service_discount_current, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by,region_code)
    VALUES (&apos;OCR0100301021&apos;, &apos;mainOrder102&apos;, &apos;78290547DDD64CF28FE47DD241DA3100&apos;, &apos;NON_SPLIT&apos;, 1, 
            &apos;SHIPMENT_ORDER_WAIT&apos;, &apos;SHIPMENT_ORDER_WAIT&apos;, &apos;SG&apos;, &apos;SG&apos;, 
            &apos;TestF&apos;, &apos;TestL&apos;, &apos;TestKF&apos;, 
            &apos;TestKL&apos;, &apos;STATE&apos;, &apos;CITY&apos;, 
            &apos;ADDRESS1&apos;, &apos;ADDRESS2&apos;, &apos;670102&apos;, &apos;7736209003&apos;, 
            &apos;7736209003&apos;, &apos;abc@gmail.com&apos;, &apos;Companyname&apos;, 
            &apos;testing&apos;, &apos;EN&apos;, &apos;S17-xu-08112244&apos;, &apos;CUSTTYPE&apos;, 
            &apos;COMMENT&apos;, &apos;ChannelType&apos;, &apos;EC&apos;, &apos;PC&apos;, 
            &apos;SCType&apos;, &apos;AC&apos;, &apos;SC&apos;, &apos;Y&apos;, 
            1000.25, &apos;N&apos;, &apos;SGD&apos;, 
            100.25, 200.25, 100.25, 
            50.25, now(), null, 
            null, 100.25, 100.25,100.25,100.25,
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUSTOMER&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUSTOMER&apos;,&apos;sg&apos;
          );

INSERT INTO core.t_provisional_order(
            order_no, integrated_order_no, language_code, customer_no, basket_no, 
            split_type, split_no, order_status, order_created_datetime, order_canceled_datetime, 
            payment_type, payment_amount_tax_included, payment_amount_tax_exclude, 
            paid_flag, payment_store_code, store_payment_barcode_no, coupon_id, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by,region_code)
    VALUES (&apos;OCR0100301021&apos;, &apos;mainOrder102&apos;, &apos;EN&apos;, &apos;S17-xu-08112244&apos;, &apos;78290547DDD64CF28FE47DD241DA3100&apos;, 
            &apos;NON_SPLIT&apos;, 1, 
            &apos;ORDER_ACCEPTANCE&apos;, now(), null, 
            &apos;UNIQLO_STORE_PAYMENT&apos;, 100.25, 100.25, 
            &apos;Y&apos;, &apos;112328&apos;, &apos;5079822000500&apos;, &apos;CPN101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;,&apos;sg&apos;);

INSERT INTO core.t_order_payment(
            order_no, payment_series_no, payment_uid, payment_id, payment_type, 
            payment_amount, payment_amount_tax_included, paid_flag, payment_store_code, 
            store_payment_barcode_no, registration_datetime, registrant_by, 
            updated_datetime, last_updated_by, store_payment_expiry_date,region_code)
    VALUES (&apos;OCR0100301021&apos;, 1002, null, null, &apos;UNIQLO_STORE_PAYMENT&apos;, 
            null, null, false, &apos;112328&apos;, 
            &apos;5079822000501&apos;, &apos;2019-12-30&apos;, &apos;CUSTOMER1&apos;, 
            &apos;2019-12-30&apos;, &apos;CUSTOMER1&apos;, null,&apos;sg&apos;);


INSERT INTO core.t_delivery(
            order_no, shipping_instruction_seq, delivery_no, shipping_country_code, 
            shipping_first_name, shipping_last_name, shipping_kana_first_name, 
            shipping_kana_last_name, shipping_address_state, shipping_address_city, 
            shipping_address_1, shipping_address_2, shipping_postal_code, 
            shipping_phone_number, shipping_mobile_no, shipping_title, shipping_corporate_name, 
            shipping_department_name, receipt_store_code, receipt_store_company_name, 
            receipt_store_name, receipt_store_additional_information, receipt_type, 
            delivery_type, delivery_designated_date, delivery_designated_datetime, 
            shipment_location_id, delivery_company_code, display_delivery_plan_date_from, 
            display_delivery_plan_date_to, deliverable_time, order_closed_time, 
            warehouse_order_comment, delivery_company_instruction_comment, 
            gift_bag_id, gift_bag_name, ordered_gift_bag_selling_price_tax_excluded, 
            ordered_gift_bag_selling_price_tax_included, message_card_id, 
            message_card_name, ordered_message_card_selling_price_tax_excluded, 
            ordered_message_card_selling_price_tax_included, message_contents, 
            wrapping_flag, main_delivery_voucher_no, store_for_comment, honorific_title, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by, 
            display_delivery_plan_datetime_from, display_delivery_plan_datetime_to)
    VALUES (&apos;OCR0100301021&apos;, null, null, null, 
            null, null, null, 
            null, null, null, 
            null, null, null, 
            null, null, null, null, 
            null, &apos;112328&apos;, null, 
            null, null, &apos;STORE&apos;, 
            &apos;REGULAR_DELIVERY&apos;, null, null, 
            null, null, null, 
            null, null, null, 
            null, null, 
            null, null, null, 
            null, null, 
            null, null, 
            null, null, 
            &apos;Y&apos;, &apos;DVOUCH102&apos;, null, null, 
            &apos;2019-12-30&apos;, &apos;CUSTOMER1&apos;, &apos;2019-12-30&apos;, &apos;CUSTOMER1&apos;, 
            null, null);


INSERT INTO core.t_order_detail(
            order_no, order_detail_no, business_date, processed_time, brand_code, 
            l1_item_code, item_name, color_name, size_name, pattern_length_name, 
            color_code, size_code, pattern_length_code, stock_in_transit_history_type, 
            first_order_item_flag, alteration_fee_chargeable_flag, customize_company_code, 
            shipment_instructed_quantity, shipment_confirmed_quantity, returning_item_quantity, 
            l2_item_code, display_l2_item_code, l3_item_code, epc_code, communication_code, 
            store_code, g_department_code, major_category_code, item_quantity, 
            first_selling_price, normal_price, single_item_limit_promotion_no, 
            single_item_limit_price, customer_single_item_limited_promotion_no, 
            customer_single_item_limited_price, bclass_item_price, new_price, 
            limited_quantity_number_of_people, non_calculation_type, bundle_purchase_applied_quantity, 
            bundle_purchase_applied_price, customer_bundle_purchase_applied_quantity, 
            customer_bundle_purchase_applied_price, store_single_item_discount_type, 
            store_single_item_discount_amount_rate, set_store_sales_flag, 
            set_store_sales_price, set_store_sales_detail_index, bundle_purchase_applied_index, 
            applied_detail_retail_price_type, applied_detail_retail_unit_price_tax_excluded, 
            applied_detail_retail_unit_price_tax_included, applied_detail_retail_price_tax_excluded, 
            applied_detail_retail_price_tax_included, taxation_type, tax_system_type, 
            payment_discount_amount, non_item_link_number, details_deleted_flag, 
            detail_processed_flag, first_selling_price_current, single_item_limit_price_current, 
            customer_single_item_limited_price_current, bclass_item_price_current, 
            new_price_current, limited_quantity_number_of_people_current, 
            bundle_purchase_applied_quantity_current, bundle_purchase_applied_price_current, 
            customer_bundle_purchase_applied_quantity_current, customer_bundle_purchase_applied_price_current, 
            store_single_item_discount_type_current, store_single_item_discount_amount_rate_current, 
            set_store_sales_flag_current, set_store_sales_price_current, 
            set_store_sales_detail_index_current, bundle_purchase_applied_index_current, 
            applied_detail_retail_unit_price_tax_excluded_current, applied_detail_retail_unit_price_tax_included_current, 
            applied_detail_retail_price_tax_excluded_current, applied_detail_retail_price_tax_included_current, 
            taxation_type_current, tax_system_type_current, payment_discount_amount_current, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by, 
            item_actual_sales_unit_price_tax_excluded, item_actual_sales_unit_price_tax_included)
    VALUES (&apos;OCR0100301021&apos;, &apos;3&apos;, &apos;01-01-2020&apos;, &apos;11:02&apos;, null, 
            null, null, null, null, null, 
            null, null, null, null, 
            true, true, null, 
            null, null, null, 
            null, null, null, null, null, 
            null, null, null, 1, 
            null, null, null, 
            null, null, 
            null, null, null, 
            null, null, null, 
            null, null, 
            null, null, 
            null, true, 
            null, null, null, 
            null, null, 
            null, null, 
            null, null, null, 
            null, null, true, 
            true, null, null, 
            null, null, 
            null, null, 
            null, null, 
            null, null, 
            null, null, 
            true, null, 
            null, null, 
            null, null, 
            null, null, 
            null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            null, null);


INSERT INTO core.t_inventory_booking(
            order_no, order_detail_no, l3_item_code, booking_id, booking_quantity, 
            shipment_order_quantity, shipment_confirmed_quantity, shipment_cancel_quantity, 
            planned_returning_item_quantity, returning_item_quantity, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301021&apos;, &apos;3&apos;, &apos;2000084856371&apos;, null, null, 
            null, null, null, 
            null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);
           
INSERT INTO core.t_inventory_booking_detail (
           order_no, order_detail_no, l3_item_code, booking_location_type, 
           booking_location_id, inventory_type, booking_quantity, transfer_management_no, 
           registration_datetime, registrant_by, updated_datetime, last_updated_by)
    values (&apos;OCR0100301021&apos;, 3, &apos;2000084856371&apos;, &apos;EC_STOCK&apos;, 
    		&apos;B00003&apos;, &apos;CONFIRMED_STOCK&apos;, 1, &apos;te&apos;, 
    		&apos;2016-07-01 05:37:18.720&apos;, &apos;S17-xu-08112244&apos;, &apos;2003-11-26 18:32:07.645&apos;, &apos;S17-xu-08112244&apos;);

INSERT INTO core.t_payment_discount(
            order_no, transaction_id, payment_discount_series_no, denomination_group_code, 
            coupon_id, corporate_id, denomination_id, payment_discount_type, 
            payment_discount_amount_rate, payment_discount_target_type, applied_discount_amount, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301021&apos;, &apos;TSCTN003&apos;, &apos;1003&apos;, &apos;DGC1003&apos;, 
            null, null, &apos;DENM1003&apos;, null, 
            1000, &apos;Normal&apos;, 250, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_delivery_pieces(
            order_no, delivery_voucher_no, registration_datetime, registrant_by, 
            updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301021&apos;, &apos;DVOUCH102&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_receipt_management(
            order_no, delivery_no, receipt_store_code, receipt_store_company_name, 
            receipt_store_name, receive_intensive_status, receive_expire_intensive_datetime, 
            store_memo, pieces_quantity, receipt_store_additional_information_1, 
            receipt_store_additional_information_2, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301021&apos;, null, &apos;112328&apos;, null, 
            null, &apos;ARRIVE_WAIT&apos;, null, 
            null, null, null, 
            null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);

INSERT INTO core.t_receipt_management_detail(
            order_no, delivery_no, delivery_voucher_no, store_receipt_no, 
            receipt_authentication_key, receipt_plan_datetime, receivable_start_datetime, 
            receipt_expire_datetime, store_arrive_datetime, received_complete_datetime, 
            store_pickup_datetime, store_return_datetime, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301021&apos;, null, &apos;DVOUCH102&apos;, &apos;00000163&apos;, 
            null, null, null, 
            null, null, null, 
            null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_receipt_management_detail_status(
            order_no, delivery_no, delivery_voucher_no, receive_management_detail_series_no, 
            store_receive_status, store_receive_status_updated_datetime, 
            store_receive_status_last_updated_by, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301021&apos;, null, &apos;DVOUCH102&apos;, 1003, 
            null, null, 
            null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_authorization_cancel_recovery(
            order_no, recovery_key, processed_type, recovery_processing_count, 
            payment_id, registration_datetime, registrant_by, updated_datetime, 
            last_updated_by)
    VALUES (&apos;OCR0100301021&apos;, &apos;RK102&apos;, &apos;Normal&apos;, 2, 
            &apos;PMNT102&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_order_control(
            order_no, control_category, control_type, control_value, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301021&apos;, &apos;Control&apos;, &apos;Normal&apos;, &apos;Value&apos;,&apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_order_detail_non_item_detail(
            order_no, detail_no, transaction_id, non_item_detail_no, business_date, 
            brand_code, non_item_code, service_code, non_item_detail_quantity, 
            new_price, non_calculation_type, applied_detail_retail_unit_price_tax_excluded, 
            applied_detail_retail_unit_price_tax_included, applied_detail_retail_price_tax_excluded, 
            applied_detail_retail_price_tax_included, taxation_type, tax_system_type, 
            non_item_discount_amount, registration_datetime, registrant_by, 
            updated_datetime, last_updated_by, non_item_actual_sales_unit_price_tax_excluded, 
            non_item_actual_sales_unit_price_tax_included)
    VALUES (&apos;OCR0100301021&apos;, 1003, &apos;TSCTN003&apos;, 1004, null, 
            null, null, null, null, 
            null, null, null, 
            null, null, 
            null, null, null, 
            null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, null, 
            null);


INSERT INTO core.t_order_detail_non_item_detail_discount(
            order_no, detail_no, transaction_id, non_item_detail_no, non_item_detail_discount_series_no, 
            promotion_type, store_discount_type, discount_quantity, detail_applied_discount_amount, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301021&apos;, 1003, &apos;TSCTN003&apos;, 1004, 1005, 
            null, null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);

INSERT INTO core.t_order_detail_non_item_detail_sales_tax(
            order_no, detail_no, transaction_id, non_item_detail_no, non_item_detail_sales_tax_series_no, 
            sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301021&apos;, 1003, &apos;TSCTN003&apos;, 1004, 1005, 
            null, null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);


INSERT INTO core.t_item_detail_discount(
            order_no, detail_no, transaction_id, item_detail_discount_series_no, 
            promotion_type, promotion_id, store_discount_type, discount_quantity, 
            detail_applied_discount_amount, registration_datetime, registrant_by, 
            updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301021&apos;, 1003, &apos;TSCTN003&apos;, 1005, 
            null, null, null, null, 
            null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);

 INSERT INTO core.t_item_detail_sales_tax(
            order_no, detail_no, transaction_id, item_detail_sales_tax_series_no, 
            sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301021&apos;, 1003, &apos;TSCTN003&apos;, 1006, 
            null, null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);

INSERT INTO core.t_item_option(
            order_no, order_detail_no, item_option_detail_no, alteration_type, 
            set_value, alteration_amount_tax_included, registration_datetime, 
            registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301021&apos;, &apos;3&apos;, &apos;000003&apos;, null, 
            null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;S17-xu-08112244&apos;);
	

INSERT INTO inventory.m_item_catalog (
                l1_item_code,l2_item_code,l3_item_code,locale_code,ec_product_name
                ,color_code,display_color_code,color_name,size_code,display_size_code
                ,size_name,pattern_length_code,display_pattern_length_code,pattern_length_name
                ,display_l2_item_code,registration_datetime,updated_datetime,registrant_by
                ,last_updated_by) 
   VALUES(&apos;172733&apos;,&apos;03600184&apos;,&apos;2000084856371&apos;,&apos;en_SG&apos;,&apos;Stretch selvedge skinny fit tapered jeans&apos;
                ,&apos;COL69&apos;,&apos;69&apos;,&apos;NAVY&apos;,&apos;INS028&apos;,&apos;028&apos;,&apos;28inch&apos;,&apos;INL034&apos;,&apos;034&apos;,&apos;34inch&apos;
                ,&apos;17273169028034&apos;,&apos;2018/04/23 15:24:40.407&apos;,&apos;2018/04/23 15:24:40.407&apos;,&apos;Itb&apos;,&apos;Itb&apos;);

INSERT INTO inventory.t_l3_stock_status_quantity(
            stock_status_id, stock_id, stock_status, quantity, block_flag, 
            registration_datetime, updated_datetime, registrant_by, last_updated_by)
    VALUES (102, 3, &apos;ORDER_BOOKED&apos;, 1, false, 
            &apos;2018/04/23 15:24:40.407&apos;,&apos;2018/04/23 15:24:40.407&apos;,&apos;Itb&apos;,&apos;Itb&apos;);
            
INSERT INTO inventory.t_l3_stock_quantity(
            stock_id, location_type, location_id, l3_item_code, stock_type, 
            stock_total_quantity, registration_datetime, updated_datetime, 
            registrant_by, last_updated_by)
    VALUES (3, &apos;EC_STOCK&apos;, &apos;B00003&apos;, &apos;2000084856371&apos;, &apos;CONFIRMED_STOCK&apos;, 
            1, &apos;2018/04/23 15:24:40.407&apos;,&apos;2018/04/23 15:24:40.407&apos;,&apos;Itb&apos;,&apos;Itb&apos;);

INSERT INTO inventory.m_plu_mapping(
            plu_mapping_id, l3_item_code, l2_item_code, display_l2_item_code, 
            l1_item_code, registration_datetime, updated_datetime, registrant_by, 
            last_updated_by)
    VALUES (102, &apos;2000084856371&apos;, &apos;03600184&apos;, &apos;17273169028036&apos;, 
            &apos;172731&apos;, &apos;2018/04/23 15:24:40.407&apos;,&apos;2018/04/23 15:24:40.407&apos;,&apos;Itb&apos;,&apos;Itb&apos;);


INSERT INTO core.t_shipment_control(
            order_no, delivery_no, shipping_instruction_seq, shipment_status, 
            shipment_sub_status, shipment_target_extraction_processing_datetime, 
            shipment_confirmed_processing_datetime, delivery_complete_processing_datetime, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by, region_code)
    VALUES (&apos;OCR0100301021&apos;, &apos;delivery_no03&apos;, 3333, null, 
            null, null, 
            &apos;2020-01-16 04:05:06+02&apos;, &apos;2020-01-16 04:05:06+02&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUSTOMER&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUSTOMER&apos;, &apos;sg&apos;);


INSERT INTO core.t_non_item_detail(
	order_no, transaction_id, non_item_detail_no, business_date, brand_code, non_item_code, service_code, non_item_detail_quantity, new_price, non_calculation_type, free_type, applied_detail_retail_unit_price_tax_excluded, applied_detail_retail_unit_price_tax_included, applied_detail_retail_price_tax_excluded, applied_detail_retail_price_tax_included, free_judge_amount, taxation_type, tax_system_type, non_item_discount_amount, shipping_agency_address, shipping_address, details_deleted_flag, detail_processed_flag, registration_datetime, registrant_by, updated_datetime, last_updated_by, non_item_actual_sales_unit_price_tax_excluded, non_item_actual_sales_unit_price_tax_included)
	VALUES (&apos;OCR0100301021&apos;, &apos;TSCTN003&apos;, 1004, &apos;20200228&apos;, &apos;uq&apos;, null, null, 2, 100, &apos;BM&apos;, null, 100, 100, 100, 100, 100, &apos;GST&apos;, &apos;GST&apos;, 100, null, null, true, true,&apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, null, null);



INSERT INTO core.t_non_item_detail_discount(
            order_no, transaction_id, non_item_detail_no, non_item_detail_discount_series_no, 
            promotion_type, store_discount_type, discount_quantity, detail_applied_discount_amount, 
            registration_datetime, registrant_by, updated_datetime, last_updated_by)
    VALUES (&apos;OCR0100301021&apos;, &apos;TSCTN003&apos;, 1004, 1004, 
           null, null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;,&apos;CUST101&apos;, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);


INSERT INTO core.t_non_item_detail_option(
	order_no, transaction_id, non_item_detail_no, non_item_detail_option_series_no, non_item_code, service_code, non_item_detail_quantity, new_price, applied_detail_retail_unit_price_tax_excluded, applied_detail_retail_unit_price_tax_included, applied_detail_retail_price_tax_excluded, applied_detail_retail_price_tax_included, taxation_type, tax_system_type, non_item_discount_amount, registration_datetime, registrant_by, updated_datetime, last_updated_by, non_item_actual_sales_unit_price_tax_excluded, non_item_actual_sales_unit_price_tax_included)
	VALUES (&apos;OCR0100301021&apos;, &apos;TSCTN003&apos;, 1004, 1004, null, null, 5, 100, 100, 100, 100, 100, &apos;GST&apos;, &apos;GST&apos;, 100, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, null, null);


INSERT INTO core.t_non_item_detail_sales_tax(
	order_no, transaction_id, non_item_detail_no, non_item_detail_sales_tax_series_no, sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, registration_datetime, registrant_by, updated_datetime, last_updated_by)
	VALUES (&apos;OCR0100301021&apos;,&apos;TSCTN003&apos;, 1004, 1004, 
            null, null, null, null, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);

            
INSERT INTO core.t_non_item_total(
	order_no, transaction_id, non_item_total_series_no, non_item_code, total_amount_tax_excluded, total_amount_tax_included, registration_datetime, registrant_by, updated_datetime, last_updated_by)
	VALUES (&apos;OCR0100301021&apos;, &apos;TSCTN003&apos;, 1004, null, null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);

INSERT INTO core.t_non_item_total_sales_tax(
	order_no, transaction_id, non_item_total_series_no, non_item_total_sales_tax_series_no, sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, registration_datetime, registrant_by, updated_datetime, last_updated_by)
	VALUES (&apos;OCR0100301021&apos;, &apos;TSCTN003&apos;, 1004, 1011, null, null, null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);

INSERT INTO core.t_non_item_detail_option_sales_tax(
	order_no, transaction_id, non_item_detail_no, non_item_detail_option_series_no, non_item_detail_option_sales_tax_series_no, sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, registration_datetime, registrant_by, updated_datetime, last_updated_by)
	VALUES (&apos;OCR0100301021&apos;, &apos;TSCTN003&apos;, 1004, 1004, 1004, null, null, null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;, 
            &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);

            
INSERT INTO core.t_sales_tax(
	order_no, transaction_id, sales_tax_series_no, sales_tax_type, sales_tax_name, sales_tax_amount, sales_tax_rate, registration_datetime, registrant_by, updated_datetime, last_updated_by)
	VALUES (&apos;OCR0100301021&apos;, &apos;TSCTN003&apos;, 1004, null, null, null, null, &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;,    &apos;2019-12-30 04:05:06+02&apos;, &apos;CUST101&apos;);


INSERT INTO core.m_common_code(
            brand_code, region_code, group_id, group_name, code_id, code_name, 
            record_sort, available_flag, comment, code_type, registrant_by, 
            registration_datetime, last_updated_by, updated_datetime)
    VALUES (&apos;uq&apos;, &apos;au&apos;, &apos;1260000002&apos;, &apos;if_country_code&apos;, &apos;14&apos;, &apos;Country code for UQCD&apos;, 
            1, true, null, &apos;SYSTEM_LOCAL&apos;, &apos;InitialUser&apos;, 
            &apos;2020-02-28 10:41:48.482915+00&apos;, &apos;InitialUser&apos;, 
            &apos;2020-02-28 10:41:48.482915+00&apos;);



INSERT INTO inventory.m_warehouse( warehouse_location_id,
warehouse_name, available_flag, display_store_code, location_type, address_line_no1,
address_line_no2, address_line_no3, address_line_no4, postal_code, state_name, city_name,
localization_name, business_code, country_code, country_name, registration_datetime, 
updated_datetime, registrant_by, last_updated_by) VALUES (&apos;B00002&apos;, &apos;warehouse&apos;, TRUE, 
&apos;122&apos;, &apos;EC_STOCK&apos;, &apos;add1&apos;, &apos;add2&apos;, &apos;add3&apos;, &apos;add4&apos;, &apos;12121&apos;, &apos;state&apos;, &apos;city&apos;, &apos;locale&apos;, &apos;
14&apos;, &apos;14&apos;, &apos;Australia&apos;, &apos;2020-01-28 06:57:53.848689+00&apos;, &apos;2020-01-28 06:57:53.848689+00&apos;, &apos;admin&apos;, &apos;admin&apos;);
</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout">3</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable">orderNo</stringProp>
          <stringProp name="variableNames">orderNo</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery"></stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="dataSource">omsroot</stringProp>
          <stringProp name="dbUrl">jdbc:postgresql://localhost:5432/omsroot</stringProp>
          <stringProp name="driver">org.postgresql.Driver</stringProp>
          <stringProp name="initQuery"></stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">pass</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">omsroot</stringProp>
        </JDBCDataSource>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="S_08_Order / Shipping_Scenario" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="ループコントローラ" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1511171268000</longProp>
        <longProp name="ThreadGroup.end_time">1511171268000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="ユーザー定義変数(試験データ)" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="Dev_no" elementType="Argument">
              <stringProp name="Argument.name">Dev_no</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.desc">環境変数(Dev●)</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="storecard_designated_code" elementType="Argument">
              <stringProp name="Argument.name">storecard_designated_code</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.desc">預りカード番号</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="basket_no" elementType="Argument">
              <stringProp name="Argument.name">basket_no</stringProp>
              <stringProp name="Argument.value">78290547DDD64CF28FE47DD241DA3109</stringProp>
              <stringProp name="Argument.desc">カート番号</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="order_no" elementType="Argument">
              <stringProp name="Argument.name">order_no</stringProp>
              <stringProp name="Argument.value">OCR0100301020</stringProp>
              <stringProp name="Argument.desc">注文番号</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="returning_item_no" elementType="Argument">
              <stringProp name="Argument.name">returning_item_no</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.desc">返品番号</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Etag" elementType="Argument">
              <stringProp name="Argument.name">Etag</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.desc">If-Match</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="X-FR-front-memberid" elementType="Argument">
              <stringProp name="Argument.name">X-FR-front-memberid</stringProp>
              <stringProp name="Argument.value">S17-xu-08112244</stringProp>
              <stringProp name="Argument.desc">FrontのID</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="X-FR-admin-userid" elementType="Argument">
              <stringProp name="Argument.name">X-FR-admin-userid</stringProp>
              <stringProp name="Argument.value">S17-xu-08112243</stringProp>
              <stringProp name="Argument.desc">Admin1のID</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="X-FR-payment-sub" elementType="Argument">
              <stringProp name="Argument.name">X-FR-payment-sub</stringProp>
              <stringProp name="Argument.value">S17-sub-bu-08112234</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="X-FR-front-accesstoken" elementType="Argument">
              <stringProp name="Argument.name">X-FR-front-accesstoken</stringProp>
              <stringProp name="Argument.value">Accesstoken</stringProp>
              <stringProp name="Argument.desc">frontのアクセストークン</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Email_address" elementType="Argument">
              <stringProp name="Argument.name">Email_address</stringProp>
              <stringProp name="Argument.value">lei13.xu@nttdata.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="encryption_key" elementType="Argument">
              <stringProp name="Argument.name">encryption_key</stringProp>
              <stringProp name="Argument.value">adyenjs_0_1_20_1$wFzuJrRcpt8Eb3e7sX6NJGKgXeC3SwnclWrZnmn3v6HUKFJoGgw79HWyFrMe9E2GNwo6keKJrGJlXzqAT7LHjD6z+G0w+fGd2DV0EnOhWTLmZe9sAnOW1FTs1Nx3dZK1P3ySlH064lujyzc4MISNO6G6prg8yqQyY7RtiErF1t9/UyuHHZ9lLxmgZotHsN7++Z35gxAj35bR9J/+NBGwsudLlItyZdM3wTT5kO6AF1SIGhk4+w++j4USYtioNb+VsLOl9Ic5hX7NpSHxJt77mqdvxA1Ass0RjSkQKFMAWQbbsnQrLx9sX4rXwaJCi1gIl6Hi2TV6xHgZ8kRVbhu7Dg==$SFa3GRUPLMFUJkMjVWp8tAo+ymyzg+DhUaUZrINq5WJW+PBx7mo0pe3trXpN009M7zs6gzSjSfWom4rKZO2be7bNhSjq7aT4WRmfbge6WxELQOxpsRXwCW1yAWLMTFg1WkBvz9NABPUndw6/ZHXRCaDaMs8MgywNGpeq6+dkurZbn9zsTfIMgCWba0QJ2e+JcAwWrhyvA4hGZQiios9UKJ3EFe/0oZBueZdv2/uuf5cmPIL9o8CNeAW/Pm6gJjubyABWo8AE7kc/qn2noSolfvO3QJ9dpoNeHH/l9DYTMi5NHD5sFRktstbgpGFJ8hDtJBaA8ifmkWSb3p6NsRFzUXBZhIEOSI4qw5v8+leyp3Uvu4LYlDQHpEcJk8P/kluIbAEUUutBwA12gXnoOZ4sSFeTxosZGvKKfc1s5fIgoPM8nF5pod1PrEw1WKkLCf2sMHwXSPDo3gmWSuCtdW0cLGEyGOdikcQiJBTIJXDmW3blIncJt+Apl3S93g7p4BGQosZDcnU3klueMaCxLMvtcgYsv0Na9A010Cr4JpU8ofIHavxvojk9ZESYHOCcl/8Ptf00QCeSL8egY1fXc3ZjjluJQtH0SqJBDn3Ix+4xgHd6mCorQu38H9EOlby34At1ASa3VXCMJhVonBda2h4HbOAo0tDC8KaFm/ziyEBdjvbZE4F+seMg6vPNT3Oh4/1BMzslvnO3roBzz6IJ3UGEkXGjxLFf/S/LO/SdBuUlPWHsXKQgn+1ywxgJ7GdyC1CsFWi5xUzqNQ==</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="etag" elementType="Argument">
              <stringProp name="Argument.name">etag</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="region" elementType="Argument">
              <stringProp name="Argument.name">region</stringProp>
              <stringProp name="Argument.value">au</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="ServerList" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="CONSUMER_BASKET" elementType="Argument">
              <stringProp name="Argument.name">CONSUMER_BASKET</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.desc">Basket Kong (Consumer)</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="CONSUMER_CORE" elementType="Argument">
              <stringProp name="Argument.name">CONSUMER_CORE</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.desc">Core Kong (Consumer)</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="CONSUMER_INVENTORY" elementType="Argument">
              <stringProp name="Argument.name">CONSUMER_INVENTORY</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.desc">Inventory Kong (Consumer)</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="CONSUMER_PAYMENTGW" elementType="Argument">
              <stringProp name="Argument.name">CONSUMER_PAYMENTGW</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.desc">PaymentGW Kong (Consumer)</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ADMIN_BASKET" elementType="Argument">
              <stringProp name="Argument.name">ADMIN_BASKET</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.desc">Basket Kong (admin)</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ADMIN_CORE" elementType="Argument">
              <stringProp name="Argument.name">ADMIN_CORE</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.desc">Core Kong (admin)</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ADMIN_INVENTORY" elementType="Argument">
              <stringProp name="Argument.name">ADMIN_INVENTORY</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.desc">Inventory Kong (admin)</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ADMIN_PAYMENTGW" elementType="Argument">
              <stringProp name="Argument.name">ADMIN_PAYMENTGW</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.desc">PaymentGW Kong (admin)</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="BATCH_BASKET" elementType="Argument">
              <stringProp name="Argument.name">BATCH_BASKET</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.desc">Basket Batch</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="BATCH_CORE" elementType="Argument">
              <stringProp name="Argument.name">BATCH_CORE</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.desc">Core Batch</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="BATCH_INVENTORY" elementType="Argument">
              <stringProp name="Argument.name">BATCH_INVENTORY</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.desc">Inventory Batch</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="BATCH_PAYMENTGW" elementType="Argument">
              <stringProp name="Argument.name">BATCH_PAYMENTGW</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.desc">Payment Batch</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BKT0100301_カート生成API_F" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;channel_code&quot;:&quot;EC&quot;,&#xd;
  &quot;real_device_code&quot;:&quot;PC&quot;,&#xd;
  &quot;currency_code&quot;:&quot;CAD&quot;,&#xd;
  &quot;basket_detail_information_list&quot;:&#xd;
  [&#xd;
    {&#xd;
      &quot;brand_code&quot;:&quot;UQ&quot;,&#xd;
      &quot;l2_item_code&quot;:&quot;03612010&quot;,&#xd;
      &quot;display_l2_item_code&quot;:&quot;17226909004000&quot;,&#xd;
      &quot;item_name&quot;:&quot;W striped boat neck L/S T-shirt A&quot;,&#xd;
      &quot;add_item_quantity&quot;:2&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${CONSUMER_BASKET}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/basket/v1/uq/ca/baskets</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.proxyHost">10.0.90.100</stringProp>
          <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
          <stringProp name="HTTPSampler.proxyUser">jundong.bu</stringProp>
          <stringProp name="HTTPSampler.proxyPass">(Nttdata)01</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダマネージャ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${CONSUMER_BASKET}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="basket_no抽出" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">basket_no</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;basket_no&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">nothing</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BKT0301301_カート統合API_F" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;basket_no&quot;:&quot;${basket_no}&quot;,&#xd;
    &quot;channel_code&quot;:&quot;EC&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${CONSUMER_BASKET}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/basket/v1/uq/ca/baskets</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.proxyHost">10.0.90.100</stringProp>
          <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
          <stringProp name="HTTPSampler.proxyUser">jundong.bu</stringProp>
          <stringProp name="HTTPSampler.proxyPass">(Nttdata)01</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダマネージャ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${CONSUMER_BASKET}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value">${X-FR-front-memberid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value">${X-FR-front-accesstoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BKT0200201_仮引当API_F" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${CONSUMER_BASKET}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/basket/v1/uq/ca/baskets/${basket_no}/temporary-booking</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.proxyHost">10.0.90.100</stringProp>
          <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
          <stringProp name="HTTPSampler.proxyUser">jundong.bu</stringProp>
          <stringProp name="HTTPSampler.proxyPass">(Nttdata)01</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダマネージャ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${CONSUMER_BASKET}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value">${X-FR-front-memberid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value">${X-FR-front-accesstoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BKT0300102_カート発注者情報更新API_F" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;customer_no&quot;:&quot;${X-FR-front-memberid}&quot;,&#xd;
  &quot;split_basket_list&quot;:&#xd;
  [&#xd;
    {&#xd;
      &quot;billing_country_code&quot;:&quot;CA&quot;,&#xd;
      &quot;billing_first_name&quot;:&quot;Consumer&quot;,&#xd;
      &quot;billing_last_name&quot;:&quot;Visa&quot;,&#xd;
      &quot;billing_address_state&quot;:&quot;Ontario&quot;,&#xd;
      &quot;billing_address_city&quot;:&quot;Toronto&quot;,&#xd;
      &quot;billing_address_1&quot;:&quot;27 Kings College Circle&quot;,&#xd;
      &quot;billing_postal_code&quot;:&quot;M5S1A1&quot;,&#xd;
      &quot;billing_telephone_no&quot;:&quot;4169782011&quot;,&#xd;
      &quot;billing_email_address&quot;:&quot;${Email_address}&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${CONSUMER_BASKET}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/basket/v1/uq/ca/baskets/${basket_no}/billing-address</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.proxyHost">10.0.90.100</stringProp>
          <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
          <stringProp name="HTTPSampler.proxyUser">jundong.bu</stringProp>
          <stringProp name="HTTPSampler.proxyPass">(Nttdata)01</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダマネージャ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${CONSUMER_BASKET}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value">${X-FR-front-memberid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value">${X-FR-front-accesstoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BKT0300201_カート受取種別更新API_F" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;split_basket_list&quot;:&#xd;
  [&#xd;
    {&#xd;
        &quot;receipt_type&quot;:&quot;HOME&quot;&#xd;
    }&#xd;
  ]&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${CONSUMER_BASKET}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/basket/v1/uq/ca/baskets/${basket_no}/shipments/receipt</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.proxyHost">10.0.90.100</stringProp>
          <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
          <stringProp name="HTTPSampler.proxyUser">jundong.bu</stringProp>
          <stringProp name="HTTPSampler.proxyPass">(Nttdata)01</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダマネージャ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${CONSUMER_BASKET}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value">${X-FR-front-memberid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value">${X-FR-front-accesstoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BKT0300301_カート配送種別更新API_F" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;split_basket_list&quot;:&#xd;
    [&#xd;
        {&#xd;
        &quot;receipt_type&quot;:&quot;HOME&quot;,&#xd;
        &quot;delivery_type&quot;:&quot;REGULAR_DELIVERY&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${CONSUMER_BASKET}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/basket/v1/uq/ca/baskets/${basket_no}/shipments/delivery</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.proxyHost">10.0.90.100</stringProp>
          <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
          <stringProp name="HTTPSampler.proxyUser">jundong.bu</stringProp>
          <stringProp name="HTTPSampler.proxyPass">(Nttdata)01</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダマネージャ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${CONSUMER_BASKET}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value">${X-FR-front-memberid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value">${X-FR-front-accesstoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BKT0300701_カート配送先更新API_F" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;split_basket_list&quot;:&#xd;
    [&#xd;
      {&#xd;
      &quot;shipping_country_code&quot;:&quot;CA&quot;,&#xd;
      &quot;shipping_first_name&quot;:&quot;NTTDTsumura&quot;,&#xd;
      &quot;shipping_last_name&quot;:&quot;Kosuke&quot;,&#xd;
      &quot;shipping_address_state&quot;:&quot;Ontario&quot;,&#xd;
      &quot;shipping_address_city&quot;:&quot;Tronto&quot;,&#xd;
      &quot;shipping_address_1&quot;:&quot;27 Kings College&quot;,&#xd;
      &quot;shipping_postal_code&quot;:&quot;M5S1A1&quot;,&#xd;
      &quot;shipping_telephone_no&quot;:&quot;4169782011&quot;&#xd;
      }&#xd;
    ]&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${CONSUMER_BASKET}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/basket/v1/uq/ca/baskets/${basket_no}/shipments</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.proxyHost">10.0.90.100</stringProp>
          <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
          <stringProp name="HTTPSampler.proxyUser">jundong.bu</stringProp>
          <stringProp name="HTTPSampler.proxyPass">(Nttdata)01</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダマネージャ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${CONSUMER_BASKET}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value">${X-FR-front-memberid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value">${X-FR-front-accesstoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BKT0300501_カート支払種別更新API_F" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;split_basket_list&quot;:&#xd;
  [&#xd;
    {&#xd;
      &quot;basket_payment_type_list&quot;:&#xd;
      [&#xd;
        {&#xd;
          &quot;payment_type&quot;:&quot;CREDIT_CARD&quot;,&#xd;
          &quot;storecard_register_flag&quot;:true&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${CONSUMER_BASKET}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/basket/v1/uq/ca/baskets/${basket_no}/payments</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.proxyHost">10.0.90.100</stringProp>
          <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
          <stringProp name="HTTPSampler.proxyUser">jundong.bu</stringProp>
          <stringProp name="HTTPSampler.proxyPass">(Nttdata)01</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダマネージャ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${CONSUMER_BASKET}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value">${X-FR-front-memberid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value">${X-FR-front-accesstoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Etag抽出" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">Etag</stringProp>
            <stringProp name="RegexExtractor.regex">Etag: (.+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">nothing</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BKT0500301_注文受付API_F" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;encryption_key&quot;:&quot;adyenjs_0_1_20_1$wFzuJrRcpt8Eb3e7sX6NJGKgXeC3SwnclWrZnmn3v6HUKFJoGgw79HWyFrMe9E2GNwo6keKJrGJlXzqAT7LHjD6z+G0w+fGd2DV0EnOhWTLmZe9sAnOW1FTs1Nx3dZK1P3ySlH064lujyzc4MISNO6G6prg8yqQyY7RtiErF1t9/UyuHHZ9lLxmgZotHsN7++Z35gxAj35bR9J/+NBGwsudLlItyZdM3wTT5kO6AF1SIGhk4+w++j4USYtioNb+VsLOl9Ic5hX7NpSHxJt77mqdvxA1Ass0RjSkQKFMAWQbbsnQrLx9sX4rXwaJCi1gIl6Hi2TV6xHgZ8kRVbhu7Dg==$SFa3GRUPLMFUJkMjVWp8tAo+ymyzg+DhUaUZrINq5WJW+PBx7mo0pe3trXpN009M7zs6gzSjSfWom4rKZO2be7bNhSjq7aT4WRmfbge6WxELQOxpsRXwCW1yAWLMTFg1WkBvz9NABPUndw6/ZHXRCaDaMs8MgywNGpeq6+dkurZbn9zsTfIMgCWba0QJ2e+JcAwWrhyvA4hGZQiios9UKJ3EFe/0oZBueZdv2/uuf5cmPIL9o8CNeAW/Pm6gJjubyABWo8AE7kc/qn2noSolfvO3QJ9dpoNeHH/l9DYTMi5NHD5sFRktstbgpGFJ8hDtJBaA8ifmkWSb3p6NsRFzUXBZhIEOSI4qw5v8+leyp3Uvu4LYlDQHpEcJk8P/kluIbAEUUutBwA12gXnoOZ4sSFeTxosZGvKKfc1s5fIgoPM8nF5pod1PrEw1WKkLCf2sMHwXSPDo3gmWSuCtdW0cLGEyGOdikcQiJBTIJXDmW3blIncJt+Apl3S93g7p4BGQosZDcnU3klueMaCxLMvtcgYsv0Na9A010Cr4JpU8ofIHavxvojk9ZESYHOCcl/8Ptf00QCeSL8egY1fXc3ZjjluJQtH0SqJBDn3Ix+4xgHd6mCorQu38H9EOlby34At1ASa3VXCMJhVonBda2h4HbOAo0tDC8KaFm/ziyEBdjvbZE4F+seMg6vPNT3Oh4/1BMzslvnO3roBzz6IJ3UGEkXGjxLFf/S/LO/SdBuUlPWHsXKQgn+1ywxgJ7GdyC1CsFWi5xUzqNQ==&quot;,&#xd;
     &quot;language_code&quot;:&quot;EN&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${CONSUMER_BASKET}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/basket/v1/uq/ca/orders/${basket_no}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダマネージャ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${CONSUMER_BASKET}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value">${Etag}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value">${X-FR-front-memberid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value">${X-FR-front-accesstoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="X-FR-payment-sub" elementType="Header">
                <stringProp name="Header.name">X-FR-payment-sub</stringProp>
                <stringProp name="Header.value">${X-FR-payment-sub}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="order_no抽出" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">order_no</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;order_no&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">nothing</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OCR1200101_Order history search API_F" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${CONSUMER_CORE}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/oms-core/v1/uq/${region}/order-history?search_page=1&amp;display_results=10</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-mm-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-mm-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${CONSUMER_CORE}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value">${X-FR-front-memberid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value">${X-FR-admin-userid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-payment-sub</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="定数タイマ" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-257714756">&quot;delivery_voucher_no&quot;:&quot;DVOUCH101&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OCR1200201_Order history detailed information acquisition API_F" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${CONSUMER_CORE}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/oms-core/v1/uq/${region}/order-history/${order_no}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-mm-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-mm-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${CONSUMER_CORE}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value">${X-FR-front-memberid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value">${X-FR-admin-userid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-payment-sub</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="定数タイマ" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="855948024">&quot;payment_store_code&quot;:&quot;112327&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OCR0200201_Payment Complete (Store Payment) API _A" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;payment_store_code&quot;:&quot;112327&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ADMIN_CORE}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/oms-core/v1/uq/${region}/orders/store-payment/${order_no}/confirm</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-mm-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-mm-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${ADMIN_CORE}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value">${X-FR-admin-userid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-payment-sub</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="定数タイマ" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OCR0500101_Pending status update API_A" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;pending_statuses&quot;:&#xd;
  [&#xd;
    {&#xd;
      &quot;pending_type&quot;:&quot;WAREHOUSE_CANCELED&quot;,&#xd;
      &quot;pending_flag&quot;:true&#xd;
     }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ADMIN_CORE}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/oms-core/v1/uq/${region}/orders/${order_no}/pend</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-mm-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-mm-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${ADMIN_CORE}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value">${X-FR-admin-userid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-payment-sub</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="定数タイマ" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OCR0500101_Pending status update API_A" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;pending_statuses&quot;:&#xd;
  [&#xd;
    {&#xd;
      &quot;pending_type&quot;:&quot;WAREHOUSE_CANCELED&quot;,&#xd;
      &quot;pending_flag&quot;:false&#xd;
     }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ADMIN_CORE}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/oms-core/v1/uq/${region}/orders/${order_no}/pend</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-mm-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-mm-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${ADMIN_CORE}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value">${X-FR-admin-userid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-payment-sub</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="定数タイマ" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OCR0200101_Order information (store payment) acquisition API _A" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="payment_store_code" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">112327</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">payment_store_code</stringProp>
              </elementProp>
              <elementProp name="order_no" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${order_no}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">order_no</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ADMIN_CORE}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/oms-core/v1/uq/${region}/orders/store-payment</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-mm-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-mm-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${ADMIN_CORE}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value">${X-FR-admin-userid1}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-payment-sub</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="定数タイマ" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="272267971">&quot;currency_code&quot;:&quot;AUD&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OCR1500101_Order cancellation reception (order number) (POS) API _A" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;payment_store_code&quot;:&quot;112327&quot;&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ADMIN_CORE}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/oms-core/v1/uq/${region}/orders/store-payment/${order_no}/cancel</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP ヘッダ" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-mm-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-Date</stringProp>
                <stringProp name="Header.value">${__time(yyyy-mm-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">${ADMIN_CORE}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">If-Match</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-amzn-Trace-Id</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-clientId</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-md5</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-phumac-algo</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-memberid</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-front-accesstoken</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-admin-userid</stringProp>
                <stringProp name="Header.value">${X-FR-admin-userid}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-FR-payment-sub</stringProp>
                <stringProp name="Header.value"></stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="定数タイマ" enabled="true">
            <stringProp name="ConstantTimer.delay">1500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </PostThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery"></stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="dataSource">omsroot</stringProp>
          <stringProp name="dbUrl">jdbc:postgresql://localhost:5432/omsroot</stringProp>
          <stringProp name="driver">org.postgresql.Driver</stringProp>
          <stringProp name="initQuery"></stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">pass</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">omsroot</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete query" enabled="true">
          <stringProp name="dataSource">omsroot</stringProp>
          <stringProp name="query">DELETE FROM core.t_order;
DELETE FROM core.t_provisional_order;
DELETE FROM core.t_order_payment;
DELETE FROM core.t_delivery;
DELETE FROM core.t_order_detail;
DELETE FROM core.t_inventory_booking;
DELETE FROM core.t_inventory_booking_detail;
DELETE FROM core.t_payment_discount;
DELETE FROM core.t_delivery_pieces;
DELETE FROM core.t_receipt_management;
DELETE FROM core.t_receipt_management_detail;
DELETE FROM core.t_receipt_management_detail_status;
DELETE FROM core.t_authorization_cancel_recovery;
DELETE FROM core.t_order_control;
DELETE FROM core.t_order_detail_non_item_detail;
DELETE FROM core.t_order_detail_non_item_detail_discount;
DELETE FROM core.t_order_detail_non_item_detail_sales_tax;
DELETE FROM core.t_item_detail_discount;
DELETE FROM core.t_item_detail_sales_tax;
DELETE FROM core.t_item_option;
DELETE FROM core.t_shipment_control;
DELETE FROM core.t_non_item_detail;
DELETE FROM core.t_non_item_detail_discount;
DELETE FROM core.t_non_item_detail_option;
DELETE FROM core.t_non_item_detail_sales_tax;
DELETE FROM core.t_non_item_total;
DELETE FROM core.t_non_item_total_sales_tax;
DELETE FROM core.t_non_item_detail_option_sales_tax;
DELETE FROM core.t_sales_tax;
DELETE FROM inventory.m_item_catalog;
DELETE FROM inventory.t_l3_stock_status_quantity;
DELETE FROM inventory.t_l3_stock_quantity;
DELETE FROM inventory.m_plu_mapping;
DELETE FROM inventory.m_warehouse;
DELETE FROM core.m_common_code where group_id=&apos;1260000002&apos; and region_code=&apos;au&apos;


</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout">3</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable">orderNo</stringProp>
          <stringProp name="variableNames">orderNo</stringProp>
        </JDBCSampler>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Display result tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
